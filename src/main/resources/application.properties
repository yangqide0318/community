server.port=8181
server.servlet.context-path=/community
##模板缓存是否开启
spring.thymeleaf.cache=false
# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/community?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=147258369
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
#mybatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.cheetah.community.entity
# 启用自动生成主键
mybatis.configuration.use-generated-keys=true
# 自动将实体类和数据库表属性之间的对应起来，因为一个是驼峰一个是下划线
mybatis.configuration.map-underscore-to-camel-case=true
#logger
#logging.level.com.cheetah.community=debug
#logging.file.path=d:/Download/logger/community.log

#邮箱配置 MailProperties
spring.mail.host=smtp.sina.com
spring.mail.port=465
spring.mail.username=cheetahy@sina.com
spring.mail.password=47a15b9755c42921
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

#community
community.path.domain=http://localhost:8181
community.path.upload=d:/Download/data/upload

#redis,这个三个参数必须要配置，其实还有很多配置，但是的有了默认配置一般不配
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379
#配置Kafka 配置类为kafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=test-consumer-group
#是否自动提交读取数据时的偏移量
spring.kafka.consumer.enable-auto-commit=true
#多久自动提交一次，3秒
spring.kafka.consumer.auto-commit-interval=3000
#配置es
spring.elasticsearch.rest.uris=http://localhost:9200
#spring线程池配置
#普通线程配置 TaskExecutionProperties
#1核心线程数量为5个
spring.task.execution.pool.core-size=5
#2多个线程去调用时可以自动扩容，自动扩容时最大线程数量的限制
spring.task.execution.pool.max-size=15
#3用队列存储没有多余线程处理等待的任务
spring.task.execution.pool.queue-capacity=100

#可执行定时任务线程池配置 TaskSchedulingProperties
spring.task.scheduling.pool.size=5
# QuartzProperties，springboot底层是配置了这个线程池的但是我们可以通过这个配置去覆盖掉，按照我们自己的想法去完成
#但是要注意我们没有做这个配置的时候没有如下第一项配置时，它默认还是用的内存中的配置不会去持久化到数据库，这样配置以后他就会将我们的配置信息持久化到数据库
#当然这个数据库也就是我们项目配置的数据库
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

#云存储空间配置，方便更改
qiniu.key.access=I1Or0y79izCxROQqFBUMEfX0Biffn3yDb8C_3T7V
qiniu.key.secret=2Tn3MYUdHDactwSEVgTGQfBkUBqDVJDIs0hTOUaz
qiniu.bucket.header.name=imcheetah-community-header
qiniu.bucket.header.url=http://qo7da5g21.hn-bkt.clouddn.com
# caffeine
caffeine.posts.max-size=15
caffeine.posts.expire-seconds=180
#actutor
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=info,caches

