<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cheetah.community.dao.MessageMapper">

    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <!--//针对每个会话只返回一个最新的私信
    List<Message> selectConversations(int userId,int offset,int limit);-->
    <select id="selectConversations" resultType="Message">
        select <include refid="selectFields"/>
        from message where id in (
        select max(id) from message where status != 2 and from_id != 1 and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id )
        order by id desc limit #{offset}, #{limit}
    </select>
    <!--
    //查询当前用户数量
    int selectConversationCount(int userId);-->
    <select id="selectConversationCount" resultType="int">
         select count(m.maxid) from (
          select max(id) as maxid from message
          where status != 2 and from_id != 1
          and (from_id = #{userId} or to_id = #{userId})
          group by conversation_id ) as m
    </select>
    <!--
    //查询会话的全部私信
    List<Message> selectLetters(String conversationId,int offset,int limit);
    -->
    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"></include> from message
        where status !=2
        and from_id !=1
        and conversation_id =#{conversationId}
        order by id desc limit #{offset}, #{limit}
    </select>
    <!--
    //某个会话的私信数量
    int selectLettersCount(String conversationId);-->
    <select id="selectLettersCount" resultType="int">
        select count(id) from message
        where status !=2
        and from_id !=1
        and conversation_id =#{conversationId}
    </select>
    <!--
    //查询未读私信的数量
    int selectLettersUnreadCount(int userId,String conversationId);-->
    <select id="selectLettersUnreadCount" resultType="int">
        select count(id) from message where status = 0 and from_id != 1 and to_id = #{userId}
        <if test="conversationId!=null"> and conversation_id = #{conversationId} </if>
    </select>
    <!--int insertMessage(Message message);-->
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <!--int updateStatus(List<Integer> ids,int status);-->
    <update id="updateStatus">
        update message set status=#{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <!--Message selectLatestNotice(int userId,String topic);-->
    <select id="selectLatestNotice" resultType="Message">
        select <include refid="selectFields"></include> from message
        where id in(
            select max(id) from message where status!=2
            and from_id=1
            and to_id=#{userId}
            and conversation_id=#{topic}
        )
    </select>
    <!--//查询某个主题的通知的数量
    int selectNoticeCount(int userId,String topic);-->
    <select id="selectNoticeCount" resultType="int">
        select count(id) from message where status!=2
            and from_id=1
            and to_id=#{userId}
            and conversation_id=#{topic}
    </select>
   <!-- //查询某个主题的未读通知的数量
    int selectNoticeUnreadCount(int userId,String topic);-->
    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id) from message where status=0
            and from_id=1
            and to_id=#{userId}
            <if test="topic!=null">
                and conversation_id=#{topic}
            </if>
    </select>
    <!--//查询通知的详情列表
    List<Message> selectNotices(int userId, String conversationId, int offset, int limit);-->
    <select id="selectNotices" resultType="Message">
        select <include refid="selectFields"></include> from message
        where status !=2
        and from_id =1
        and conversation_id =#{conversationId}
        and to_id=#{userId}
        order by id desc limit #{offset}, #{limit}
    </select>
</mapper>
